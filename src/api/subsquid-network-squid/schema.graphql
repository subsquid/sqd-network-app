### COMMON ###

scalar BigInt

query squidNetworkHeight {
  squidStatus {
    height
  }
}

query settings {
  settingsConnection(orderBy: id_ASC) {
    edges {
      node {
        id
        bondAmount
        delegationLimitCoefficient
        minimalWorkerVersion
        recommendedWorkerVersion
      }
    }
  }
}

### ACCOUNT ###

fragment AccountFragment on Account {
  id
  type
  balance
}

query sources($address: String!) {
  accounts(
    where: { OR: [{ id_eq: $address }, { owner: { id_eq: $address } }] }
    orderBy: [type_ASC, id_ASC]
  ) {
    ...AccountFragment
  }
}

query sourcesWithAssets($address: String!) {
  accounts(
    where: { OR: [{ id_eq: $address }, { owner: { id_eq: $address } }] }
    orderBy: [type_ASC, id_ASC]
  ) {
    ...AccountFragment

    workers2(where: { OR: [{ bond_gt: 0 }, { claimableReward_gt: 0 }] }) {
      ...WorkerBaseFragment
      bond
      claimableReward
    }

    delegations2(where: { OR: [{ deposit_gt: 0 }, { claimableReward_gt: 0 }] }) {
      deposit
      claimableReward
      worker {
        ...WorkerBaseFragment
      }
    }
  }
}

query sourcesWithDelegations($address: String!, $peerId: String) {
  accounts(
    where: { OR: [{ id_eq: $address }, { owner: { id_eq: $address } }] }
    orderBy: [type_ASC, id_ASC]
  ) {
    ...AccountFragment

    delegations2(where: { OR: [{ deposit_gt: 0 }], AND: [{ worker: { peerId_eq: $peerId } }] }) {
      deposit
      claimableReward
      worker {
        ...WorkerBaseFragment
      }
    }
  }
}

### WORKERS ###

fragment WorkerBaseFragment on Worker {
  id
  name
  peerId
}

fragment WorkerStatusFragment on Worker {
  status
  online
  jailed
  dialOk
  jailReason
}

fragment WorkerFragment on Worker {
  ...WorkerBaseFragment
  ...WorkerStatusFragment
  version
  createdAt
  uptime90Days
  apr
  stakerApr
  totalDelegation
  capedDelegation
  owner {
    id
    type
  }
  realOwner {
    id
  }
}

fragment WorkerFullFragment on Worker {
  ...WorkerFragment
  bond
  claimableReward
  claimedReward
  uptime24Hours
  delegationCount
  locked
  totalDelegationRewards
  website
  email
  description
  queries24Hours
  queries90Days
  scannedData24Hours
  scannedData90Days
  servedData24Hours
  servedData90Days
  storedData
  dayUptimes {
    timestamp
    uptime
  }
}

query allWorkers {
  workers(where: { status_eq: ACTIVE }, orderBy: totalDelegation_ASC) {
    ...WorkerFragment
  }
}

query workerByPeerId($peerId: String!, $address: String) {
  workers(where: { peerId_eq: $peerId }, limit: 1) {
    ...WorkerFullFragment
    delegations(where: { realOwner: { id_eq: $address }, deposit_gt: 0 }) {
      claimableReward
      claimedReward
      deposit
      locked
      owner {
        id
        type
      }
    }
  }
}

query workerDaysUptimeById($id: String!, $from: DateTime!) {
  workerSnapshotsByDay(workerId: $id, from: $from) {
    timestamp
    uptime
  }
}

query myWorkers($address: String!) {
  workers(orderBy: id_ASC, where: { realOwner: { id_eq: $address }, status_not_eq: WITHDRAWN }) {
    ...WorkerFragment
    uptime24Hours
    claimableReward
    claimedReward
  }
}

query myWorkersCount($address: String!) {
  workersConnection(orderBy: id_ASC, where: { realOwner: { id_eq: $address } }) {
    totalCount
  }
}

query workerDelegationInfo($workerId: String!) {
  workerById(id: $workerId) {
    bond
    totalDelegation
    capedDelegation
    liveness
    dTenure
    trafficWeight
  }

  statistics(limit: 1) {
    utilizedStake
    baseApr
  }
}

query workerOwner($workerId: String!) {
  workerById(id: $workerId) {
    owner {
      id
      type
    }
    realOwner {
      id
    }
  }
}

query myDelegations($address: String!, $workerId: String) {
  workers(orderBy: id_ASC, where: {peerId_eq: $workerId, delegations_some: {realOwner: {id_eq: $address}, deposit_gt: 0}}) {
    ...WorkerFragment
    delegations(where: { realOwner: { id_eq: $address }, deposit_gt: 0 }) {
      claimableReward
      claimedReward
      deposit
      locked
      owner {
        id
        type
      }
    }
  }
}

query myAssets($address: String!) {
  accounts(where: { id_eq: $address }) {
    balance
    owned {
      id
      balance
    }
  }
  workers(where: { realOwner: { id_eq: $address } }) {
    ...WorkerBaseFragment
    bond
    claimableReward
  }
  delegations(
    where: {
      realOwner: { id_eq: $address }
      AND: { OR: [{ deposit_gt: 0 }, { claimableReward_gt: 0 }] }
    }
  ) {
    claimableReward
    deposit
  }
}

query myClaims($address: String!) {
  delegations(where: { realOwner: { id_eq: $address }, claimableReward_gt: 0 }) {
    claimableReward
    deposit
    worker {
      ...WorkerBaseFragment
    }
    owner {
      id
      type
    }
  }
  workers(where: { realOwner: { id_eq: $address }, claimableReward_gt: 0 }) {
    ...WorkerBaseFragment
    claimableReward
    owner {
      id
      type
    }
  }
}

### GATEWAYS ###

fragment GatewayFragment on Gateway {
  id
  name
  status
  description
  email
  endpointUrl
  website
  createdAt
  owner {
    id
    type
  }
  realOwner {
    id
    type
  }
}

query gatewayByPeerId($peerId: String!) {
  gatewayById(id: $peerId) {
    ...GatewayFragment
  }
}

fragment GatewayStakeFragment on GatewayStake {
  owner {
    id
    type
  }
  realOwner {
    id
    type
  }
  autoExtension
  amount
  computationUnits
  computationUnitsPending
  locked
  lockStart
  lockEnd
}

query myGateways($address: String!) {
  gateways(where: { realOwner: { id_eq: $address }, status_not_eq: DEREGISTERED }) {
    ...GatewayFragment
  }
}

query myGatewayStakes($address: String!) {
  gatewayStakes(where: { realOwner: { id_eq: $address }, amount_gt: "0" }) {
    ...GatewayStakeFragment
  }

  networkStats {
    blockTimeL1
    lastBlockL1
    lastBlockTimestampL1
  }
}

fragment VestingFragment on Account {
  id
  type
  balance
  owner {
    id
  }
}

query vestingByAddress($address: String!) {
  accountById(id: $address) {
    ...VestingFragment
  }
}

query networkSummary {
  networkStats {
    onlineWorkersCount
    queries90Days
    queries24Hours
    servedData90Days
    servedData24Hours
    stakerApr
    totalBond
    totalDelegation
    storedData
    workerApr
    workersCount
    aprs {
      stakerApr
      timestamp
      workerApr
    }
  }
}

query currentEpoch {
  networkStats {
    blockTimeL1
    lastBlockL1
    lastBlockTimestampL1
  }

  epoches(limit: 1, orderBy: id_DESC) {
    number
    start
    end
  }
}
